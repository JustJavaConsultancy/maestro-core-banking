pipeline{
    agent any
    options {
        buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '4')
        disableConcurrentBuilds abortPrevious: true
    }
    triggers {
        cron('H 4 * * 6')
    }
    tools{
        maven 'maven'
    }
    stages{
        stage("Initialising"){
            steps{
                sh "sudo newman --version"
                script{
                    if (env.BRANCH_NAME == 'main') {
                        sh "sudo curl -X POST https://wallet.remita.net/management/shutdown"
                        }  else  if (env.BRANCH_NAME == 'serverbranch'){
                            sh "sudo curl -X POST https://walletdemo.remita.net/management/shutdown"
                        }
                }
            }
        }
        stage("Maven Clean"){
            steps{
                sh "sudo bash ./mvnw clean"
            }
        }
        stage("Installing yarn"){
            steps{
                sh "sudo yarn install"
            }
        }
        stage("Run webpack"){
            steps{
                sh "sudo yarn run webpack:build:main"
            }
        }
        stage("Staging"){
            parallel{
                stage('port1'){
                    steps{
                        script{
                            if (env.BRANCH_NAME == 'main') {
                                sh "sudo bash ./mvnw -Pprod"
                                }  else  if (env.BRANCH_NAME == 'serverbranch'){
                                sh "sudo mvn -Pstaging -Dserver.port=9003"
                                }
                        }
                    }
                }
                stage('port2'){
                    steps{
                        script{
                            if (env.BRANCH_NAME == 'main') {
                                sh "sudo bash ./mvnw -Pprod"
                                }  else  if (env.BRANCH_NAME == 'serverbranch'){
                                sh "sudo mvn -Pstaging -Dserver.port=9001"
                                }
                        }
                    }
                }
                stage('port3'){
                    steps{
                        script{
                            if (env.BRANCH_NAME == 'main') {
                                sh "sudo bash ./mvnw -Pprod"
                                }  else  if (env.BRANCH_NAME == 'serverbranch'){
                                sh "sudo mvn -Pstaging -Dserver.port=9002"
                                }
                        }
                    }
                }
            }
        }
    }
    // post {
    //         always{
    //             // emailext attachLog: true,
    //             // body: "Job ${env.JOB_NAME}: ${currentBuild.currentResult} \nMore Info can be found here: ${env.BUILD_URL}",
    //             // subject: "Jenkins build:${currentBuild.currentResult} ${env.JOB_NAME}",
    //             // to: 'akinrinde@systemspecs.com.ng' 'mabdulwasii@gmail.com'
    //                 sh "newman run https://www.getpostman.com/collections/f9b375a3789bbf42e0ad --reporters cli,junit --reporter-junit-export newman/report.xml"
    //                 junit skipPublishingChecks: true, testResults: 'newman/report.xml'
    //             }
    //     }
    post {
        always{
            mail bcc: '', body: "Job ${env.JOB_NAME}: ${currentBuild.currentResult} \nMore Info can be found here: ${env.BUILD_URL}", cc: '', from: '', replyTo: '', subject: "Jenkins build:${currentBuild.currentResult} ${env.JOB_NAME}", to: "apanisile@systemspecs.com.ng, akinrinde@systemspecs.com.ng, abdulwasii@gmail.com"
        }
    }
}
-

pipeline{
    agent any
    options {
        buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '4')
        disableConcurrentBuilds abortPrevious: true
    }
    triggers {
        cron('H 4 * * 6')
    }
    tools{
        maven 'maven'
    }
    stages{
        stage("Initialising"){
            steps{
                sh "sudo newman --version"
                script{
                    if (env.BRANCH_NAME == 'main') {
                        sh "sudo curl -X POST https://wallet.remita.net/management/shutdown"
                        }  else  if (env.BRANCH_NAME == 'serverbranch'){
                            sh "sudo curl -X POST https://walletdemo.remita.net/management/shutdown"
                        }
                }
            }
        }
        stage("Maven Clean"){
            steps{
                sh "sudo bash ./mvnw clean"
            }
        }
        stage("Installing yarn"){
            steps{
                sh "sudo yarn install"
            }
        }
        stage("Run webpack"){
            steps{
                sh "sudo yarn run webpack:build:main"
            }
        }
        stage("Staging"){
            steps{
                script{
                    if (env.BRANCH_NAME == 'main') {
                        sh "sudo bash ./mvnw -Pprod"
                        }  else  if (env.BRANCH_NAME == 'serverbranch'){
                        sh "sudo mvn -Pstaging"
                        }
                }
            }
        }
    }
    // post {
    //         always{
    //             // emailext attachLog: true,
    //             // body: "Job ${env.JOB_NAME}: ${currentBuild.currentResult} \nMore Info can be found here: ${env.BUILD_URL}",
    //             // subject: "Jenkins build:${currentBuild.currentResult} ${env.JOB_NAME}",
    //             // to: 'akinrinde@systemspecs.com.ng' 'mabdulwasii@gmail.com'
    //                 sh "newman run https://www.getpostman.com/collections/f9b375a3789bbf42e0ad --reporters cli,junit --reporter-junit-export newman/report.xml"
    //                 junit skipPublishingChecks: true, testResults: 'newman/report.xml'
    //             }
    //     }
    post {
        always{
            mail bcc: '', body: "Job ${env.JOB_NAME}: ${currentBuild.currentResult} \nMore Info can be found here: ${env.BUILD_URL}", cc: '', from: '', replyTo: '', subject: "Jenkins build:${currentBuild.currentResult} ${env.JOB_NAME}", to: "apanisile@systemspecs.com.ng, akinrinde@systemspecs.com.ng, abdulwasii@gmail.com"
        }
    }
}
















